<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <id>com.dj.tool</id>
    <name>Code Audit</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="jiaozhu303@yeha.net" url="https://www.dj.com">DJ</vendor>

    <!--    收费插件 - 必须启用此标签信息-->
    <!--    <product-descriptor-->
    <!--            code="PCODEAUDIT"-->
    <!--            release-date="20231223"-->
    <!--            release-version="202332"-->
    <!--            optional="true"/>-->
    <version>2.4.2</version>
    <idea-version since-build="233" until-build="233.*"/>
    <description>
        <![CDATA[
            <p>
                <b>Code Audit</b>is a free Code Review tool that combines with version management software (Git) and document management software (Confluence) to socially share and discuss code with team members and others.
Generally, our Code review is to mark the problems in the code, and Code Audit is also, but it can communicate according to the code through a mode like chat or community interaction. And can be linked with IDEA. When someone reviews your code, a chat box will pop up in the lower right corner of your IDEA to tell you in time, and you can also export the review record, or synchronize the review result to confluence, and generate a report. More convenient double disk code.
 </p>
            <p><b>Usage Instructions:</b>
            <ul>
                <li>1. Download and install this plugin from maketplace.</li>
                <li> 2. In the menu bar, tools, find the option "Code Audit", find setting, and open it.</li>
                <li> 3. Set the RestFull interface address of Confluence, user authentication information, confluence space key, and id of the parent directory that stores the review result according to the user's own environment.</li>
                <li> 4, the next is to use this Tool, you can in the intelliJ Idea editor, select a piece of problematic code, or text, and then the menu bar, find the "code audit" option in the "code audit tool", click it, or pop up the information panel.</li>
                <li>5. In the information entry panel, you can enter the author, the type of problem, the level of the problem, and some comments on the current code segment.</li>
                <li>6, you can click the save button, record this problem, and then continue to review other code, if you find any code that needs to be recorded, repeat the above operations.</li>
                <li>7. You can find the list of information recorded by review in the tool window. Among them, the "confluence" button synchronizes the current recorded information to the confluence page according to the style of the list, which can be used as a history record to facilitate the cooperation of multiple people to record problems. It will automatically put the information in your paste version and can be copied anywhere else for record use. When the record is finished, you can select a line and click the delete button, or directly click the "clean" button, everything is clear.</li>
            </ul>
            <p><b>The meaning of using this tool:</b></p>
            <ul>
                <li>Code reviews share knowledge:<br/>
                At the heart of all agile teams is unbeatable flexibility: the ability to cross work off the to-do list and start by all team members. As a result, teams are better able to pivot around new work, with no one being the "critical path." Full stack engineers can handle both front-end and server-side work. As code reviews expose developers to new ideas and techniques, they write better code.</li>
                <li>Work can be better evaluated through code reviews:<br/>
                Remember the section on evaluation? Evaluation is a team exercise, and as product knowledge spreads through the team, the team makes better evaluations. As new features are added to existing code, the original developers can provide good feedback and evaluation. In addition, any code reviewer will take into account the complexity of the code base and known concerns. In this way the code reviewer shares the knowledge of the original developer for that part of the code base. This practice allows product knowledge to be shared by more than one person, often making the final evaluation more reliable when it comes time to do it.
                <li>Code reviews give you a vacation:<br/>
                No one likes to be the sole contact for a piece of code. Similarly, no one wants to delve into critical code they didn't write themselves - especially if there's an emergency in production. Code reviews share knowledge across the team so that any team member can take over and continue to steer the ship. (We love this analogy at Atlassian!) But here's the point: no single developer is the critical path, which also means team members can take vacations as needed. If you find yourself stuck in product development, code reviews are a great way to free yourself up. Feel free to take a vacation, or feel free to look at other areas of the product.</li>
                <li>Mentor new engineers through code reviews:<br/>
                One feature of agile development is that when new members join the team, experienced engineers mentor the new members. Code reviews help facilitate communication about the code base. Often, teams hide product knowledge in code during code reviews. The new members come with fresh eyes and a fresh perspective to examine the codebase's rough edges and legacy flaws. Therefore, code reviews also help to ensure that new insights are reconciled with existing knowledge.</li>
            <ul>
        ]]>
    </description>


    <depends>com.intellij.modules.platform</depends>

    <actions>

        <group id="code-audit-group" text="Code Audit" description="Code Audit" icon="MyIcons.Code" popup="true">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
            <action id="add-comment" class="com.dj.tool.action.AddComment" text="Code Audit Tool" icon="MyIcons.Action"
                    description="Code Audit tool">
                <keyboard-shortcut keymap="$default" first-keystroke="alt A"/>
            </action>

            <action id="code-setting" class="com.dj.tool.action.CodeAuditSetting" text="Code Audit Setting"
                    icon="MyIcons.Setting"
                    description="Code Audit Setting">
            </action>
        </group>

    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <!--        <projectService serviceImplementation="com.dj.tool.service.CodeAuditSettingProjectService"/>-->
        <applicationService serviceImplementation="com.dj.tool.service.CodeAuditSettingApplicationService"/>
        <!--        <projectService serviceImplementation="com.dj.tool.listener.DateRefreshNotifyListener"/>-->
        <projectService serviceImplementation="com.dj.tool.publisher.DateRefreshMessagePublisher"/>

        <toolWindow id="CodeRecord"
                    icon="MyIcons.ToolWindow"
                    anchor="bottom"
                    doNotActivateOnStart="true"
                    factoryClass="com.dj.tool.action.ManageReviewComment"/>
        <codeInsight.lineMarkerProvider
                language=""
                implementationClass="com.dj.tool.action.LeftMarkIconProvider"/>
        <notificationGroup id="Code Audit Notification"
                           displayType="BALLOON"/>
    </extensions>
    <!--    <applicationListeners>-->
    <!--        <listener class="com.dj.tool.listener.DateRefreshNotifyListener"-->
    <!--                  topic="com.dj.tool.listener.DateRefreshListener"/>-->
    <!--    </applicationListeners>-->
</idea-plugin>
